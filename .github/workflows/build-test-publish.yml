name: Build

on:
  push:
    branches: ["*"]
    pull_request: [master]
    tags: ["v*.*.*"]

jobs:
  test:
    name: Test with Python ${{matrix.python_version}} on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python_version: ["3.8", "3.9", "3.10"]
        include:
          - os: windows-latest
            python_version: "3.8"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{matrix.python_version}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python_version}}
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{runner.os}}-pip-${{hashFiles('setup.cfg')}}
          restore-keys: |
            ${{runner.os}}-pip-
            ${{runner.os}}-
      - name: Upgrade pip
        run: |-
          python -m pip install -U pip versioneer
      - name: Install test dependencies
        run: |-
          python -m pip install pytest pytest-cov '.[test]'
      - name: Run unit tests
        run: |-
          python -m pytest --cov-report=term --cov=capellambse --rootdir=.

  publish:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Build packages
        run: |-
          echo "Building '$GITHUB_REF'"
          python -m pip install -U pip build twine
          python -m build
          python -m twine check dist/*
      - name: Publish to PyPI (release only)
        if: startsWith(github.ref, 'refs/tags/v')
        run: python -m twine upload -u __token__ -p ${{ secrets.PYPI_TOKEN }} --non-interactive dist/*
