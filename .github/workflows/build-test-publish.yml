# SPDX-FileCopyrightText: Copyright DB Netz AG and the capellambse contributors
# SPDX-License-Identifier: CC0-1.0

name: Build

on:
  push:
    branches: ["*"]
    tags: ["v*.*.*"]

jobs:
  test:
    name: Test with Python ${{matrix.python_version}} on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python_version:
          - "3.9"
          - "3.10"
        include:
          - os: windows-latest
            python_version: "3.9"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{matrix.python_version}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python_version}}
      - name: Locate pip's cache
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{steps.pip-cache.outputs.dir}}
          key: ${{runner.os}}-pip-${{hashFiles('pyproject.toml')}}
          restore-keys: |
            ${{runner.os}}-pip-
      - name: Upgrade Pip
        run: |-
          python -m pip install -U pip
      - name: Install test dependencies
        run: |-
          python -m pip install '.[test]'
      - name: Run unit tests
        run: |-
          python -m pytest --cov-report=term --cov=capellambse --rootdir=.

  publish:
    name: Publish artifacts
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |-
          python -m pip install -U pip
          python -m pip install build twine
      - name: Build packages
        run: |-
          python -m build
      - name: Verify packages
        run: |-
          python -m twine check dist/*
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: 'dist/*'
      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
        run: python -m twine upload -u __token__ -p ${{ secrets.PYPI_TOKEN }} --non-interactive dist/*
